<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="ABOUTUS_desc" xml:space="preserve">
    <value>我们制造所有 viechels 的备件。</value>
  </data>
  <data name="ABOUTUS_Titer" xml:space="preserve">
    <value>关于我们</value>
  </data>
  <data name="AboutUs_title_left" xml:space="preserve">
    <value>广州市广州勤利国际贸易有限公司位于广州市白云区嘉禾望岗工业区26号2号楼A013室。我们有30多年的汽车零部件经验，专营日本、韩国、美国和中国汽车。我们的产品涵盖各类客车配件，市场范围涉及非洲、南美及东南亚、欧洲、美洲等。我们开发高品质的产品，建立双赢的合作和周到的服务。我公司是多元化经营模式，集生产、销售为一体，兼营进出口代理、互贸、中转、进出口贸易。同时，我们与许多工厂有着良好和长期的合作。</value>
  </data>
  <data name="AboutUs_title_right" xml:space="preserve">
    <value>我们有进出口权。我们的汽车配件畅销世界各地，严格按照国际标准。我们从事汽车零部件30多年，在零部件的生产、销售、售后服务和配套设施方面拥有丰富的经验。配件范围很广。我们的经营理念是“诚实守信、价格优惠、客户至上”，是我们赢得国内外客户信赖的原因。</value>
  </data>
  <data name="Call" xml:space="preserve">
    <value>称呼</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>接触</value>
  </data>
  <data name="Contact_desc" xml:space="preserve">
    <value>是公司，是电话，是地址。</value>
  </data>
  <data name="Contact_titer" xml:space="preserve">
    <value>接触</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>电子邮件</value>
  </data>
  <data name="Fo_Copyright" xml:space="preserve">
    <value>© 版权所有秦力。版权所有</value>
  </data>
  <data name="Fo_Nav_OurServices" xml:space="preserve">
    <value>我们的服务</value>
  </data>
  <data name="Fo_Nav_UsefulLinks" xml:space="preserve">
    <value>有用的链接</value>
  </data>
  <data name="Fo_Newsletter_btn" xml:space="preserve">
    <value>订阅</value>
  </data>
  <data name="Fo_Newsletter_desc" xml:space="preserve">
    <value>示例示例示例示例示例</value>
  </data>
  <data name="Fo_Newsletter_titer" xml:space="preserve">
    <value>加入我们的时事通讯</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Go" xml:space="preserve">
    <value>去</value>
  </data>
  <data name="HeaderDescription" xml:space="preserve">
    <value>我们做备件</value>
  </data>
  <data name="HeaderTitle" xml:space="preserve">
    <value>欢迎来到勤力公司</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>家</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>学到更多</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>可能。邓</value>
  </data>
  <data name="Message_btn" xml:space="preserve">
    <value>发信息</value>
  </data>
  <data name="Message_Email" xml:space="preserve">
    <value>你的邮件</value>
  </data>
  <data name="Message_Msg" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="Message_Name" xml:space="preserve">
    <value>你的名字</value>
  </data>
  <data name="Message_Subject" xml:space="preserve">
    <value>科目</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>电话</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>产品</value>
  </data>
  <data name="Products_des" xml:space="preserve">
    <value>产品在这里</value>
  </data>
  <data name="Products_titer" xml:space="preserve">
    <value>产品</value>
  </data>
</root>